name: Continuous integration

on:
  push:
    branches:
      - "**"
    tags:
      - "**"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v1
      - name: Cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install, lint and build
        run: |
          npm ci
          npm run lint:no-fix
          npm run build
        env:
          CI: ${{ true }}
      - name: Build and publish Docker image
        if: "contains(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master'"
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: c2corg/c2c_ui
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Get the branch
        id: get_branch
        run: echo ::set-output name=BRANCH::${GITHUB_REF/refs\/heads\//}
      - name: Build for github pages
        run: npm run build:github
      - name: Configure git for remote pushs
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      - name: Deploy branch to github pages
        run: bash scripts/deploy-gh-pages.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPOSITORY: ${{ github.repository }}
          BRANCH: ${{ steps.get_branch.outputs.BRANCH }}

  update-release-description:
    needs: build
    if: "github.ref == 'refs/heads/master'"
    runs-on: ubuntu-latest
    steps:
      - name: Get the tag
        id: get_tag
        run: echo ::set-output name=TAG::${GITHUB_REF/refs\/tags\//}
      - name: Run script to update release description
        run: sh scripts/update-release-description.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPOSITORY: ${{ github.repository }}
          TAG: ${{ steps.get_tag.outputs.TAG }}

  push-i18n:
    needs: build
    if: "github.ref == 'refs/heads/master'"
    runs-on: ubuntu-latest
    steps:
      - name: Push translations to transifex
        run: curl -L --user api:${{ secrets.TRANSIFEX_TOKEN }} -F file="@src/translations/po/c2corg_ui-client.pot" -X PUT "https://www.transifex.com/api/2/project/c2corg_ui/resource/main/content/"
