{"version":3,"sources":["webpack:///./node_modules/proj4/lib/global.js","webpack:///./node_modules/proj4/lib/constants/values.js","webpack:///./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///./node_modules/proj4/lib/constants/units.js","webpack:///./node_modules/proj4/lib/match.js","webpack:///./node_modules/proj4/lib/projString.js","webpack:///./node_modules/wkt-parser/parser.js","webpack:///./node_modules/wkt-parser/process.js","webpack:///./node_modules/wkt-parser/index.js","webpack:///./node_modules/proj4/lib/defs.js","webpack:///./node_modules/proj4/lib/parseCode.js","webpack:///./node_modules/proj4/lib/extend.js","webpack:///./node_modules/proj4/lib/common/msfnz.js","webpack:///./node_modules/proj4/lib/common/sign.js","webpack:///./node_modules/proj4/lib/common/adjust_lon.js","webpack:///./node_modules/proj4/lib/common/tsfnz.js","webpack:///./node_modules/proj4/lib/common/phi2z.js","webpack:///./node_modules/proj4/lib/projections/merc.js","webpack:///./node_modules/proj4/lib/projections/longlat.js","webpack:///./node_modules/proj4/lib/projections.js","webpack:///./node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///./node_modules/proj4/lib/deriveConstants.js","webpack:///./node_modules/proj4/lib/constants/Datum.js","webpack:///./node_modules/proj4/lib/datum.js","webpack:///./node_modules/proj4/lib/nadgrid.js","webpack:///./node_modules/proj4/lib/Proj.js","webpack:///./node_modules/proj4/lib/datumUtils.js","webpack:///./node_modules/proj4/lib/datum_transform.js","webpack:///./node_modules/proj4/lib/adjust_axis.js","webpack:///./node_modules/proj4/lib/common/toPoint.js","webpack:///./node_modules/proj4/lib/checkSanity.js","webpack:///./node_modules/proj4/lib/transform.js","webpack:///./node_modules/proj4/lib/core.js","webpack:///./node_modules/mgrs/mgrs.js","webpack:///./node_modules/proj4/lib/Point.js","webpack:///./node_modules/proj4/lib/common/pj_enfn.js","webpack:///./node_modules/proj4/lib/common/pj_mlfn.js","webpack:///./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///./node_modules/proj4/lib/projections/tmerc.js","webpack:///./node_modules/proj4/lib/common/sinh.js","webpack:///./node_modules/proj4/lib/common/hypot.js","webpack:///./node_modules/proj4/lib/common/log1py.js","webpack:///./node_modules/proj4/lib/common/asinhy.js","webpack:///./node_modules/proj4/lib/common/gatg.js","webpack:///./node_modules/proj4/lib/common/clens.js","webpack:///./node_modules/proj4/lib/common/cosh.js","webpack:///./node_modules/proj4/lib/common/clens_cmplx.js","webpack:///./node_modules/proj4/lib/projections/etmerc.js","webpack:///./node_modules/proj4/lib/common/adjust_zone.js","webpack:///./node_modules/proj4/lib/projections/utm.js","webpack:///./node_modules/proj4/lib/common/srat.js","webpack:///./node_modules/proj4/lib/projections/gauss.js","webpack:///./node_modules/proj4/lib/projections/sterea.js","webpack:///./node_modules/proj4/lib/projections/stere.js","webpack:///./node_modules/proj4/lib/projections/somerc.js","webpack:///./node_modules/proj4/lib/projections/omerc.js","webpack:///./node_modules/proj4/lib/projections/lcc.js","webpack:///./node_modules/proj4/lib/projections/krovak.js","webpack:///./node_modules/proj4/lib/common/mlfn.js","webpack:///./node_modules/proj4/lib/common/e0fn.js","webpack:///./node_modules/proj4/lib/common/e1fn.js","webpack:///./node_modules/proj4/lib/common/e2fn.js","webpack:///./node_modules/proj4/lib/common/e3fn.js","webpack:///./node_modules/proj4/lib/common/gN.js","webpack:///./node_modules/proj4/lib/common/adjust_lat.js","webpack:///./node_modules/proj4/lib/common/imlfn.js","webpack:///./node_modules/proj4/lib/projections/cass.js","webpack:///./node_modules/proj4/lib/common/qsfnz.js","webpack:///./node_modules/proj4/lib/projections/laea.js","webpack:///./node_modules/proj4/lib/common/asinz.js","webpack:///./node_modules/proj4/lib/projections/aea.js","webpack:///./node_modules/proj4/lib/projections/gnom.js","webpack:///./node_modules/proj4/lib/common/iqsfnz.js","webpack:///./node_modules/proj4/lib/projections/cea.js","webpack:///./node_modules/proj4/lib/projections/eqc.js","webpack:///./node_modules/proj4/lib/projections/poly.js","webpack:///./node_modules/proj4/lib/projections/nzmg.js","webpack:///./node_modules/proj4/lib/projections/mill.js","webpack:///./node_modules/proj4/lib/projections/sinu.js","webpack:///./node_modules/proj4/lib/projections/moll.js","webpack:///./node_modules/proj4/lib/projections/eqdc.js","webpack:///./node_modules/proj4/lib/projections/vandg.js","webpack:///./node_modules/proj4/lib/projections/aeqd.js","webpack:///./node_modules/proj4/lib/projections/ortho.js","webpack:///./node_modules/proj4/lib/projections/qsc.js","webpack:///./node_modules/proj4/lib/projections/robin.js","webpack:///./node_modules/proj4/lib/projections/geocent.js","webpack:///./node_modules/proj4/lib/projections/tpers.js","webpack:///./node_modules/proj4/projs.js","webpack:///./node_modules/proj4/lib/index.js"],"names":["defs","WGS84","GOOGLE","PJD_3PARAM","PJD_7PARAM","PJD_GRIDSHIFT","PJD_WGS84","PJD_NODATUM","SRS_WGS84_SEMIMAJOR","SRS_WGS84_SEMIMINOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","Math","PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","ft","to_meter","ignoredChar","match","obj","key","testkey","processedKey","keys","Object","lkey","toLowerCase","replace","i","length","paramName","paramVal","paramOutname","self","paramObj","defData","split","map","v","trim","filter","a","reduce","p","push","params","proj","datum","rf","parseFloat","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","gamma","rectified_grid_angle","lonc","longc","x_0","x0","y_0","y0","k_0","k0","k","b","r_a","R_A","zone","parseInt","south","utmSouth","towgs84","datum_params","units","unit","from_greenwich","pm","nadgrids","datumCode","axis","legalAxis","indexOf","substr","approx","NEUTRAL","KEYWORD","NUMBER","QUOTED","AFTERQUOTE","ENDED","whitespace","latin","keyword","endThings","digets","Parser","text","Error","this","level","place","root","stack","currentObject","state","parseString","txt","parser","output","mapit","value","Array","isArray","unshift","thing","out","newObj","item","sExpr","shift","name","convert","prototype","readCharicter","char","test","neutral","quoted","afterquote","number","word","afterItem","pop","newObjects","rename","outName","inName","d2r","input","cleanWKT","wkt","type","projName","local","PROJECTION","AXIS","axisOrder","ii","descriptor","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","ratio","slice","sphere","ellps","TOWGS84","isFinite","renamer","list","forEach","lisp","that","arguments","def","charAt","apply","EPSG","ESRI","IAU2000","console","log","global","testObj","code","testDef","codeWords","testWKT","some","codes","checkMercator","auth","checkProjStr","ext","testProj","parse","maybeProjStr","property","destination","source","undefined","con","eccent","sinphi","cosphi","sqrt","x","abs","sign","com","pow","tan","phi","dphi","eccnth","atan","ts","sin","init","es","e","cos","msfnz","forward","y","lon","lat","adjust_lon","tsfnz","exp","phi2z","names","inverse","identity","pt","projs","merc","longlat","projStore","add","len","n","get","start","ellipseName","eccentricity","a2","b2","ep2","ellipse","datum_type","grids","wgs84","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","loadedNadgrids","nadgrid","data","view","DataView","isLittleEndian","detectLittleEndian","header","readHeader","nSubgrids","subgrids","readSubgrids","getNadgrids","parseNadgridString","optional","mandatory","grid","isNull","secondsToRadians","seconds","nFields","getInt32","warn","nSubgridFields","shiftType","decodeString","fromSemiMajorAxis","getFloat64","fromSemiMinorAxis","toSemiMajorAxis","toSemiMinorAxis","end","String","fromCharCode","Uint8Array","buffer","gridOffset","subHeader","readGridHeader","nodes","readGridNodes","lngColumnCount","round","upperLongitude","lowerLongitude","longitudeInterval","latColumnCount","upperLatitude","lowerLatitude","latitudeInterval","ll","del","lim","count","gridNodeCount","cvs","mapNodes","r","longitudeShift","latitudeShift","offset","parent","gridHeader","nodesOffset","gridRecordLength","gridShiftRecords","record","getFloat32","latitudeAccuracy","longitudeAccuracy","Projection","srsCode","callback","error","json","parseCode","ourProj","projections","datumDef","sphere_","ecc","datumObj","extend","Proj","compareDatums","dest","geodeticToGeocentric","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","z","Infinity","geocentricToGeodetic","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","genau","genau2","maxiter","X","Y","Z","atan2","geocentricToWgs84","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricFromWgs84","x_tmp","y_tmp","z_tmp","checkParams","point","source_a","source_es","gridShiftCode","applyGridShift","dest_a","dest_b","dest_es","destGridShiftResult","Number","NaN","attemptedGrids","subgrid","epsilon","minX","minY","maxX","maxY","applySubgridShift","isNaN","pin","ct","val","tb","t","nadInterpolate","dif","tol","inx","indx","floor","frct","f00","f10","f11","f01","m11","m10","m00","m01","xin","yin","zin","denorm","crs","array","m","checkCoord","num","TypeError","checkNotWGS","transform","toPoint","checkSanity","adjust_axis","datum_transform","transformer","from","to","coords","transformedArray","concat","splice","checkProj","oProj","fromProj","toProj","coord","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","I","O","accuracy","encode","LLtoUTM","mgrs","bbox","UTMtoLL","decode","toUpperCase","left","bottom","right","top","degToRad","deg","radToDeg","rad","LongOrigin","eccPrimeSquared","N","T","C","A","M","LongOriginRad","ZoneNumber","Lat","Long","eccSquared","LatRad","LongRad","UTMEasting","UTMNorthing","northing","easting","zoneNumber","zoneLetter","getLetterDesignator","utm","N1","T1","C1","R1","D","mu","phi1Rad","e1","result","topRight","LetterDesignator","seasting","snorthing","get100kID","setParm","get100kSetForZone","setColumn","setRow","getLetter100kID","column","row","parm","index","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","twoLetter","mgrsString","testChar","hunK","sb","substring","set","east100k","getEastingFromChar","north100k","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","curCol","eastingValue","rewindMarker","curRow","northingValue","Point","fromMGRS","mgrsStr","toMGRS","C00","C02","C04","C06","C08","C22","C44","C46","C48","C66","C68","C88","en","cphi","sphi","MAX_ITER","arg","s","pj_mlfn","pj_enfn","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","pj_inv_mlfn","tan_phi","d","ds","f","g","temp","h","asin","max","min","log1py","hypot","cos_2B","B","pp","h1","h2","hr","arg_r","hr1","hr2","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","sinh","arg_i","cosh_arg_i","cosh","j","hi1","hi","tmerc","cgb","cbg","utg","gtu","np","Qn","gatg","Zb","clens","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","asinhy","tmp","clens_cmplx","dependsOn","adjust_zone","etmerc","esinp","rc","phic0","ratexp","K","srat","DEL_TOL","gauss","sinc0","cosc0","R2","title","sinc","cosc","cosl","rho","ssfn_","phit","eccen","coslat0","sinlat0","cons","ms1","X0","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phy0","lambda0","sinPhy0","semiMajorAxis","invF","flattening","e2","R","b0","k1","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","TOL","isTypeA","typeAProjections","projectionName","cosph0","F","H","L","sinph0","J","gamma0","lamc","lam1","lam2","phi1","phi2","alpha_c","no_off","no_rot","alp","gam","one_es","E","lam0","pi","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","v_pole_s","U","V","W","u","Qp","Sp","Tp","Vp","Up","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","theta","s45","s90","fi0","alfa","uq","u0","n0","s0","ro0","ad","gfi","deltav","eps","ro","czech","fi1","ok","e0","e3","e0fn","e1fn","e2fn","e3fn","mlfn","lam","nl","gN","tl","asq","cl","dd","ml1","imlfn","nl1","rl1","tl1","dl","dsq","adjust_lat","S_POLE","N_POLE","EQUIT","OBLIQ","mode","qp","qsfnz","mmf","apa","authset","rq","xmf","ymf","sinb1","cosb1","coslam","sinlam","q","sinb","cosb","cCe","sCe","ab","cosz","sinz","authlat","P00","P01","P02","P10","P11","P20","APA","beta","sin_po","cos_po","t1","qs1","t2","qs2","t3","qs0","ns0","qs","phi1z","asinz","eccnts","sin_p14","cos_p14","infinity_dist","coslon","ksp","iqsfnz","dlat","el","bl","tanphi","mln","mlnp","ma","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_re1","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_re1","z_n_im1","delta_x","delta_y","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","C_y","C_x","delta_theta","ml2","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","GH","Hs","kp","cos_c","s2","s3","s4","s5","cosAz","Ee","sinpsi","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","face","one_minus_f","one_minus_f_squared","xy","area","sinlon","qsc_shift_lon_origin","qsc_fwd_equat_face_theta","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","slon","COEFS_X","COEFS_Y","FXC","FYC","RC1","NODES","poly3_val","coefs","poly3_der","newton_rapshon","f_df","max_err","iters","upd","azi","degrees","tilt","bind","pn1","rp","pfact","omega","cg","sg","cw","sw","yt","ba","bm","bq","proj4","sterea","stere","somerc","omerc","lcc","krovak","cass","laea","aea","gnom","cea","eqc","poly","nzmg","mill","sinu","moll","eqdc","vandg","aeqd","ortho","qsc","robin","geocent","tpers","defaultDatum","version"],"mappings":"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","file":"js/proj4-legacy.d1632353.js","sourcesContent":["export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function() {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = wkt.AXIS[i];\n      var descriptor = axis[0].toLowerCase();\n      if (descriptor.indexOf('north') !== -1) {\n        axisOrder += 'n';\n      } else if (descriptor.indexOf('south') !== -1) {\n        axisOrder += 's';\n      } else if (descriptor.indexOf('east') !== -1) {\n        axisOrder += 'e';\n      } else if (descriptor.indexOf('west') !== -1) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n","import {PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  if (header.nSubgrids > 1) {\n    console.log('Only single NTv2 subgrids are currently supported, subsequent sub grids are ignored');\n  }\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {header: header, subgrids: subgrids};\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) { return null; }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n  }\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n    };\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport {getNadgrids} from \"./nadgrid\";\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = {x: -point.x, y: point.y};\n  var output = {x: Number.NaN, y: Number.NaN};\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    onlyMandatoryGrids = grid.mandatory;\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n      continue;\n    }\n    var subgrid = grid.grid.subgrids[0];\n    // skip tables that don't match our point at all\n    var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n    var minX = subgrid.ll[0] - epsilon;\n    var minY = subgrid.ll[1] - epsilon;\n    var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n    var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n    if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n      continue;\n    }\n    output = applySubgridShift(input, inverse, subgrid);\n    if (!isNaN(output.x)) {\n      break;\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\"+\n      -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {x: Number.NaN, y: Number.NaN};\n  if (isNaN(pin.x)) { return val; }\n  var tb = {x: pin.x, y: pin.y};\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n  var val= {x: Number.NaN, y: Number.NaN};\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx++;\n  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx += ct.lim[0];\n  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx--;\n  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.splice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.splice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.splice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function (coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  \"Lambert Tangential Conformal Conic Projection\",\n  \"Lambert_Conformal_Conic\",\n  \"Lambert_Conformal_Conic_1SP\",\n  \"Lambert_Conformal_Conic_2SP\",\n  \"lcc\"\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};","\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n}","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n"],"sourceRoot":""}